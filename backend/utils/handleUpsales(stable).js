const shot = require('../utils/screenshotHelper');

function getExpectedUpsale({ upsales, profile, upsaleIndex, page }) {
    // –°–ø–µ—Ü–ª–æ–≥–∏–∫–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –∞–ø—Å–µ–π–ª–∞ –∏ upgrade
    if (upsaleIndex === 1 && profile?.product?.quantity) {
        // –ù–∞—Ö–æ–¥–∏–º upgrade –¥–ª—è –Ω—É–∂–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–∞–∫–µ—Ç–æ–≤
        const upgradeName = `-upgrade-${profile.product.quantity}`;
        const found = upsales.find(u => u.name && u.name.includes(upgradeName));
        if (found) return found;
    }

    // –î–∞–ª—å—à–µ –ø—Ä–æ–±—É–µ–º –ø–æ sku –∏–∑ URL
    let url = page.url();
    let match = url.match(/upsale-(\d+)\.html/);
    let skuFromUrl = match ? match[1] : null;
    if (skuFromUrl) {
        const foundBySku = upsales.find(u => String(u.sku) === skuFromUrl);
        if (foundBySku) return foundBySku;
    }

    // –°—Ç—Ä–æ–≥–æ –ø–æ –∏–Ω–¥–µ–∫—Å—É (–∞–ø—Å–µ–π–ª—ã –∏–¥—É—Ç —Å—Ç—Ä–æ–≥–æ –ø–æ –ø–æ—Ä—è–¥–∫—É –ø–æ—Å–ª–µ upgrade)
    // (–∏–Ω–¥–µ–∫—Å –≤ –º–∞—Å—Å–∏–≤–µ upsales: –µ—Å–ª–∏ –±—ã–ª upgrade, —Ç–æ 1 => 1-–π after upgrade)
    return upsales[upsaleIndex - 1] || null;
}

async function compareTitle({ page, expectedUpsale, upsaleIndex, log }) {
    let expectedTitle = expectedUpsale?.templates?.title || '';
    let titleStripped = expectedTitle.replace(/Upsell|Upgrade/gi, '').trim().toLowerCase();
    let actualTitle = (await page.title() || '').replace(/Upsell|Upgrade/gi, '').trim().toLowerCase();

    log(`--- [–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∞–ø—Å–µ–π–ª–∞ #${upsaleIndex}] ---`);
    log(`–¢–∏–ø –∞–ø—Å–µ–π–ª–∞: ${upsaleIndex === 1 ? 'UPGRADE' : '–û–ë–´–ß–ù–´–ô'}`);
    log(`–û–∂–∏–¥–∞–µ–º—ã–π TITLE: "${titleStripped}"`);
    log(`–§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π TITLE (–∏–∑ —Å—Ç—Ä–∞–Ω–∏—Ü—ã): "${actualTitle}"`);
    if (expectedUpsale && actualTitle !== titleStripped) {
        log(`‚ùå [Check][#${upsaleIndex}] Title –Ω–µ —Å–æ–≤–ø–∞–ª! –û–∂–∏–¥–∞–ª–∏: "${titleStripped}", –§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π: "${actualTitle}"`);
    } else if (expectedUpsale) {
        log(`‚úÖ [Check][#${upsaleIndex}] Title —Å–æ–≤–ø–∞–ª`);
    } else {
        log(`‚ùå [Check][#${upsaleIndex}] –ù–µ –Ω–∞—à–ª–∏ –∞–ø—Å–µ–π–ª –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è!`);
    }
}

function compareSku({ expectedUpsale, postDataParsed, upsaleIndex, log, sendTestInfo }) {
    let expectedSku = expectedUpsale?.sku;
    const actualSku = postDataParsed['upsale[]'] || null;
    log(`–û–∂–∏–¥–∞–µ–º—ã–π SKU: ${String(expectedSku) === String(actualSku)
        ? `<span style="color:#33d033;font-weight:bold">${expectedSku}</span>`
        : `<span style="color:#c82d2d;font-weight:bold">${expectedSku}</span>`}`);
    log(`–§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π SKU (–∏–∑ ajax/add-upsale): ${String(expectedSku) === String(actualSku)
        ? `<span style="color:#33d033;font-weight:bold">${actualSku}</span>`
        : `<span style="color:#c82d2d;font-weight:bold">${actualSku}</span>`}`);
    if (String(expectedSku) === String(actualSku)) {
        log(`‚úÖ [Check][#${upsaleIndex}] SKU —Å–æ–≤–ø–∞–ª`);
    } else {
        log(`‚ùå [Check][#${upsaleIndex}] SKU –Ω–µ —Å–æ–≤–ø–∞–ª! –û–∂–∏–¥–∞–ª–∏: ${expectedSku}, –§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π (POST): ${actualSku}`);
    }
    if (typeof sendTestInfo === 'function') {
        sendTestInfo({
            _section: 'Upsales POST ajax/order',
            sku: expectedSku,
            data: { 'upsale[]': actualSku }
        });
    }
}

module.exports = async function handleUpsales(
    page, log, custom, sendTestInfo, checkStateAjax, firstUpsaleState, screenshotDir
) {
    let selectSchema = "1";
    if (custom && typeof custom === 'string' && custom.trim().length > 0) selectSchema = custom.trim();
    if (custom && typeof custom === 'object' && custom.customParam) selectSchema = custom.customParam;
    let actions = selectSchema.split('-').map(x => Number(x));
    const buyAll = !actions || actions.length <= 1;

    let upsaleIndex = 1;
    const maxUpsales = 10;
    const compareUpsales = (firstUpsaleState && firstUpsaleState.upsales) ? firstUpsaleState.upsales : [];
    const compareProfile = (firstUpsaleState && firstUpsaleState.profile) ? firstUpsaleState.profile : {};

    while (upsaleIndex < maxUpsales) {
        let currentUrl = page.url();
        if (/confirmation\.html/i.test(currentUrl)) {
            log('‚úÖ –î–æ—Å—Ç–∏–≥–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è (confirmation.html), –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∞–ø—Å–µ–π–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
            break;
        }
        // –ù–µ—Ç –Ω—É–∂–Ω–æ–≥–æ –∞–ø—Å–µ–π–ª–∞ –≤ –º–∞—Å—Å–∏–≤–µ ‚Äî –≤—ã—Ö–æ–¥–∏–º (—á—Ç–æ–±—ã –Ω–µ –ª–æ–≤–∏—Ç—å NO-–∫–Ω–æ–ø–∫—É –Ω–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º –∞–ø—Å–µ–π–ª–µ)
        if (compareUpsales.length < upsaleIndex) break;

        // --- –ù–∞ –ø–µ—Ä–≤–æ–º –∞–ø—Å–µ–π–ª–µ —Ç–µ—Å—Ç–∏–º "–Ω–∞–∑–∞–¥" —Å—Ä–∞–∑—É ---
        if (upsaleIndex === 1) {
            log(`üß™ –ü—Ä–æ–±—É–µ–º –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ —Å –ø–µ—Ä–≤–æ–≥–æ –∞–ø—Å–µ–π–ª–∞ –Ω–∞ —á–µ–∫–∞—É—Ç...`);
            const urlBefore = page.url();
            await page.goBack();
            await page.waitForTimeout(1000);
            const urlAfter = page.url();
            if (urlAfter === urlBefore) {
                log(`‚úÖ [Check] –ü–æ—Å–ª–µ –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞–∑–∞–¥ –≤—Å—ë –µ—â–µ –æ—Å—Ç–∞–ª–∏—Å—å –Ω–∞ –∞–ø—Å–µ–π–ª–µ #1 (–û–ö)`);
            } else {
                log(`‚ùå [Check] –ü–æ—Å–ª–µ –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞–∑–∞–¥ URL –∏–∑–º–µ–Ω–∏–ª—Å—è! –ë—ã–ª–æ: ${urlBefore}, —Å—Ç–∞–ª–æ: ${urlAfter}`);
            }
            await page.goForward();
            await page.waitForTimeout(350);
        }

        // --- –ù–∞ –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö –∞–ø—Å–µ–π–ª–∞—Ö –ø–µ—Ä–µ–¥ –∫–Ω–æ–ø–∫–∞–º–∏ –∂–¥—ë–º —Å—Ç–µ–π—Ç –∏ —Å–º–æ—Ç—Ä–∏–º URL ---
        if (upsaleIndex > 1 && typeof checkStateAjax === 'function') {
            await checkStateAjax(page, log);
            const urlAfterState = page.url();
            if (/confirmation\.html/i.test(urlAfterState)) {
                log('‚û°Ô∏è –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ confirmation');
                break;
            }
            // —Ç–µ—Å—Ç "–Ω–∞–∑–∞–¥" –Ω–∞ –≤—Ç–æ—Ä–æ–º –∏ –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö –∞–ø—Å–µ–π–ª–∞—Ö
            log(`üß™ –ü—Ä–æ–±—É–µ–º –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ —Å–æ –≤—Ç–æ—Ä–æ–≥–æ –∏ –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –∞–ø—Å–µ–π–ª–∞ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π...`);
            const urlBefore = page.url();
            await page.goBack();
            await page.waitForTimeout(1000);
            const urlAfter = page.url();
            if (urlAfter === urlBefore) {
                log(`‚úÖ [Check] –ü–æ—Å–ª–µ –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞–∑–∞–¥ –≤—Å—ë –µ—â–µ –æ—Å—Ç–∞–ª–∏—Å—å –Ω–∞ –∞–ø—Å–µ–π–ª–µ #${upsaleIndex} (–û–ö)`);
            } else {
                log(`‚ùå [Check] –ü–æ—Å–ª–µ –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞–∑–∞–¥ URL –∏–∑–º–µ–Ω–∏–ª—Å—è! –ë—ã–ª–æ: ${urlBefore}, —Å—Ç–∞–ª–æ: ${urlAfter}`);
            }
            await page.goForward();
            await page.waitForTimeout(350);
        }

        // ----- –î–∞–ª—å—à–µ –æ–±—ã—á–Ω—ã–π flow —Å –ø–æ–∫—É–ø–∫–æ–π/–æ—Ç–∫–∞–∑–æ–º -----
        let action = 1;
        if (!buyAll) action = actions[upsaleIndex] ?? 0;
        let btnSelector = action === 1
            ? '.button_fixed .button__yes.u-button, .button__yes:not([style*="display:none"])'
            : '.button__no:not([style*="display:none"])';

        let btnHandle;
        try {
            btnHandle = await page.waitForSelector(btnSelector, { timeout: 6000, state: 'visible' });
        } catch {
            btnHandle = null;
        }
        if (!btnHandle) {
            log(`‚ùå –ù–µ—Ç –≤–∏–¥–∏–º–æ–π –∫–Ω–æ–ø–∫–∏ ${action === 1 ? 'YES' : 'NO'} –¥–ª—è –∞–ø—Å–µ–π–ª–∞ #${upsaleIndex}`);
            if (sendTestInfo) sendTestInfo({
                error: `–ù–µ—Ç –≤–∏–¥–∏–º–æ–π –∫–Ω–æ–ø–∫–∏ ${action === 1 ? 'YES' : 'NO'} –¥–ª—è –∞–ø—Å–µ–π–ª–∞ #${upsaleIndex}`
            });
            break;
        }

        if (screenshotDir) {
            log(`üü° [DEBUG] –î–µ–ª–∞—é —Å–∫—Ä–∏–Ω—à–æ—Ç upsale-${upsaleIndex}`);
            await shot(page, screenshotDir, `upsale-${upsaleIndex}`, log);
        }

        // --- –°—Ä–∞–≤–Ω–µ–Ω–∏–µ TITLE –¥–æ –∫–ª–∏–∫–∞ ---
        if (compareUpsales && compareUpsales.length) {
            const expectedUpsale = getExpectedUpsale({
                upsales: compareUpsales,
                profile: compareProfile,
                upsaleIndex,
                page
            });
            await compareTitle({ page, expectedUpsale, upsaleIndex, log });
        } else {
            log(`‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö state –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è upsale #${upsaleIndex}`);
        }

        let postDataParsed = null;
        let expectedUpsale = null;

        if (action === 1) {
            // YES: –∂–¥–µ–º ajax/add-upsale, –¥–ª—è SKU
            let request;
            try {
                [request] = await Promise.all([
                    page.waitForRequest(req =>
                            req.method() === 'POST' && req.url().includes('/ajax/add-upsale'),
                        { timeout: 5000 }
                    ),
                    btnHandle.click()
                ]);
            } catch (e) {
                log(`‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∞–ø—Å–µ–π–ª #${upsaleIndex} (YES)`);
                if (sendTestInfo) sendTestInfo({
                    error: `–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∞–ø—Å–µ–π–ª #${upsaleIndex} (YES)`
                });
                break;
            }
            postDataParsed = {};
            if (request) {
                const postData = request.postData();
                try {
                    const params = new URLSearchParams(postData);
                    for (const [k, v] of params.entries()) postDataParsed[k] = v;
                } catch {
                    postDataParsed = postData;
                }
            }
            if (compareUpsales && compareUpsales.length) {
                expectedUpsale = getExpectedUpsale({ upsales: compareUpsales, profile: compareProfile, upsaleIndex, page });
                compareSku({ expectedUpsale, postDataParsed, upsaleIndex, log, sendTestInfo });
            }
            log(`‚úîÔ∏è Upsale #${upsaleIndex}: –ö—É–ø–∏–ª–∏`);
            log(`--------------------------`);
        } else {
            // NO
            try {
                await btnHandle.click();
                log(`‚úîÔ∏è Upsale #${upsaleIndex}: –û—Ç–∫–ª–æ–Ω–∏–ª–∏`);
                log(`--------------------------`);
            } catch (e) {
                log(`‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫–ª–æ–Ω–∏—Ç—å –∞–ø—Å–µ–π–ª #${upsaleIndex} (NO)`);
                if (sendTestInfo) sendTestInfo({
                    error: `–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫–ª–æ–Ω–∏—Ç—å –∞–ø—Å–µ–π–ª #${upsaleIndex} (NO)`
                });
                break;
            }
        }

        await page.waitForTimeout(350);
        // –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –∫–ª–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º URL (confirmation? ‚Äî –±–æ–ª—å—à–µ –Ω–µ –∏–¥—ë–º –¥–∞–ª—å—à–µ)
        const afterUrl = page.url();
        if (/confirmation\.html/i.test(afterUrl)) {
            log('‚û°Ô∏è –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ confirmation');
            break;
        }
        upsaleIndex++;
    }
};
