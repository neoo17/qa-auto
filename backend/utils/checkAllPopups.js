/**
 * @param {import('playwright').Page} page
 * @param {Function} log
 * @param {string} partner
 * @param {string} pageName
 */
module.exports = async function checkAllPopups(page, log, partner, pageName) {
    const allLinks = await page.$$('.modal-link');
    const visibleLinks = [];
    for (const link of allLinks) {
        const isVisible = await link.evaluate(el => {
            const style = window.getComputedStyle(el);
            return style.display !== 'none' && style.visibility !== 'hidden' && el.offsetParent !== null;
        });
        if (isVisible) visibleLinks.push(link);
    }
    log(`DEBUG: –Ω–∞–π–¥–µ–Ω–æ –≤–∏–¥–∏–º—ã—Ö .modal-link: ${visibleLinks.length}`);

    if (!visibleLinks.length) {
        log(`‚ùå[${pageName}] –ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–π –≤–∏–¥–∏–º–æ–π —Å—Å—ã–ª–∫–∏ .modal-link`);
        return;
    }

    let affiliatesFound = false;
    for (const link of visibleLinks) {
        const found = await link.evaluate(el => {
            let parent = el.parentElement;
            while (parent && !['UL','OL','NAV','DIV','SECTION','FOOTER','BODY'].includes(parent.tagName)) {
                parent = parent.parentElement;
            }
            if (!parent) return false;
            const a = Array.from(parent.querySelectorAll('a')).find(node => {
                if (!node.textContent) return false;
                const style = window.getComputedStyle(node);
                return (
                    style.display !== 'none' &&
                    style.visibility !== 'hidden' &&
                    node.offsetParent !== null &&
                    node.textContent.trim() === 'Affiliates'
                );
            });
            return !!a;
        });
        if (found) {
            affiliatesFound = true;
            break;
        }
    }

    if (partner === 'ga' || partner === 'hg') {
        if (affiliatesFound) {
            log(`‚úÖ[${pageName}] –ù–∞–π–¥–µ–Ω–∞ –≤–∏–¥–∏–º–∞—è —Å—Å—ã–ª–∫–∞ Affiliates`);
        } else {
            log(`‚ùå[${pageName}] –î–ª—è –ø–∞—Ä—Ç–Ω—ë—Ä–∞ ga/hg –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ Affiliates`);
        }
    } else {
        if (affiliatesFound) {
            log(`‚ùå[${pageName}] –û—à–∏–±–∫–∞: –Ω–∞–π–¥–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ Affiliates –¥–ª—è –ø–∞—Ä—Ç–Ω—ë—Ä–∞ ${partner}`);
        } else {
            log(`‚úÖ[${pageName}] –ù–µ—Ç –Ω–∏ –æ–¥–Ω–æ–π —Å—Å—ã–ª–∫–∏ Affiliates –¥–ª—è –ø–∞—Ä—Ç–Ω—ë—Ä–∞ ${partner}`);
        }
    }


    for (let i = 0; i < visibleLinks.length; i++) {
        const link = visibleLinks[i];
        await link.evaluate(el => el.scrollIntoView({ behavior: "smooth", block: "center" }));
        const text = await link.evaluate(el => el.textContent.trim());
        log(`üñ±[${pageName}] –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ–ø–∞–ø –ø–æ —Å—Å—ã–ª–∫–µ: "${text}"`);
        await link.click({ force: true });
        const modalAppeared = await page.waitForSelector('.modal:visible, .modal[style*="display: block"]', { timeout: 5000 }).catch(() => null);
        if (!modalAppeared) {
            log(`‚ùå[${pageName}] –ü–æ–ø–∞–ø "${text}" –Ω–µ –æ—Ç–∫—Ä—ã–ª—Å—è –∑–∞ 5 —Å–µ–∫—É–Ω–¥, –∏–¥—ë–º –¥–∞–ª—å—à–µ`);
            continue;
        }
        log(`‚è≥[${pageName}] –ñ–¥—ë–º 1.2 —Å–µ–∫—É–Ω–¥—ã –ø–æ—Å–ª–µ –æ—Ç–∫—Ä—ã—Ç–∏—è –ø–æ–ø–∞–ø–∞`);
        await page.waitForTimeout(1200);

        const modalVisible = await page.$('.modal:visible, .modal[style*="display: block"]');
        if (modalVisible) {
            log(`‚úÖ[${pageName}] –ü–æ–ø–∞–ø –æ—Ç–∫—Ä—ã–ª—Å—è`);
        } else {
            log(`‚ùå[${pageName}] –ü–æ–ø–∞–ø –Ω–µ –æ—Ç–∫—Ä—ã–ª—Å—è`);
            continue;
        }

        const closeBtn = await modalVisible.$('.close-modal');
        if (closeBtn) {
            log(`‚úÖ[${pageName}] –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –ø–æ–ø–∞–ø–∞`);
            await closeBtn.click();
            log(`‚è≥[${pageName}] –ñ–¥—ë–º 1.5 —Å–µ–∫—É–Ω–¥—ã –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è –ø–æ–ø–∞–ø–∞`);
            await page.waitForTimeout(1500);
            await page.waitForSelector('.modal:visible, .modal[style*="display: block"]', { state: 'hidden', timeout: 3000 })
                .catch(() => log(`‚ùå[${pageName}] –ü–æ–ø–∞–ø "${text}" –Ω–µ –∑–∞–∫—Ä—ã–ª—Å—è –∑–∞ 3 —Å–µ–∫—É–Ω–¥—ã (–∏–ª–∏ —É–∂–µ –∑–∞–∫—Ä—ã—Ç)`));

            log(`‚úÖ[${pageName}] –ü–æ–ø–∞–ø —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã–ª—Å—è`);
        } else {
            log(`‚ùå[${pageName}] –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ .close-modal –≤–Ω—É—Ç—Ä–∏ –ø–æ–ø–∞–ø–∞`);
        }

        await page.waitForTimeout(600);
    }

    log(`‚úîÔ∏è[${pageName}] –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –ø–æ–ø–∞–ø–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞`);
}
