/**
 * –°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç —Ç–µ–ª–µ—Ñ–æ–Ω —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ –∏–∑ —Å—Ç–µ–π—Ç–∞
 * –ê —Ç–∞–∫–∂–µ —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–Ω–æ–ø–∫—É "–Ω–∞–∑–∞–¥" ‚Äî –¥–æ–ª–∂–Ω—ã –æ—Å—Ç–∞—Ç—å—Å—è –Ω–∞ confirmation
 * @param {import('playwright').Page} page
 * @param {Object} state - —Å—Ç–µ–π—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã (order, confirmation)
 * @param {Function} log - —Ñ—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
 */
module.exports = async function checkConfirmationPage(page, state, log) {
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ .local-phone –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        const localPhoneExists = await page.$('.local-phone') !== null;
        if (localPhoneExists) {
            // –¢–µ–ª–µ—Ñ–æ–Ω –∏–∑ —Å—Ç–µ–π—Ç–∞
            const statePhone = state?.data?.templates?.phone;
            if (!statePhone) {
                log('‚ùó –ù–µ –Ω–∞–π–¥–µ–Ω —Ç–µ–ª–µ—Ñ–æ–Ω –≤ —Å—Ç–µ–π—Ç–µ –∑–∞–∫–∞–∑–∞');
                return;
            }

            // –¢–µ–ª–µ—Ñ–æ–Ω –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
            const pagePhone = await page.$eval('.local-phone', el => el.innerText.trim());
            if (pagePhone === statePhone) {
                log(`‚úÖ –¢–µ–ª–µ—Ñ–æ–Ω –Ω–∞ confirmation —Å–æ–≤–ø–∞–¥–∞–µ—Ç: ${pagePhone}`);
            } else {
                log(`‚ùå –¢–µ–ª–µ—Ñ–æ–Ω –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç! –ù–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: ${pagePhone}, –≤ —Å—Ç–µ–π—Ç–µ: ${statePhone}`);
            }
        }
        // –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç–∞ –Ω–µ—Ç ‚Äî –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
    } catch (e) {
        log(`‚ùó –û—à–∏–±–∫–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–∞ confirmation: ${e.message}`);
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
    try {
        log('üß™ –ü—Ä–æ–±—É–µ–º –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ —Å confirmation –Ω–∞ –∞–ø—Å–µ–π–ª...');
        const urlBefore = page.url();
        await page.goBack();
        await page.waitForTimeout(1000);
        const urlAfter = page.url();
        if (urlAfter === urlBefore) {
            log(`‚úÖ [Check] –ü–æ—Å–ª–µ –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞–∑–∞–¥ –≤—Å—ë –µ—â–µ –æ—Å—Ç–∞–ª–∏—Å—å –Ω–∞ confirmation (–û–ö)`);
        } else {
            log(`‚ùå [Check] –ü–æ—Å–ª–µ –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞–∑–∞–¥ URL –∏–∑–º–µ–Ω–∏–ª—Å—è! –ë—ã–ª–æ: ${urlBefore}, —Å—Ç–∞–ª–æ: ${urlAfter}`);
        }
        // –ú–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–±—Ä–∞—Ç–Ω–æ –≤–ø–µ—Ä—ë–¥ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        await page.goForward();
        await page.waitForTimeout(200);
    } catch (e) {
        log(`‚ùó –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–Ω–æ–ø–∫–∏ "–Ω–∞–∑–∞–¥" –Ω–∞ confirmation: ${e.message}`);
    }
};
