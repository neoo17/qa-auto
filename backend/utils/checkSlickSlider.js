/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ slick-—Å–ª–∞–π–¥–µ—Ä, –∏ –ª–∏—Å—Ç–∞–µ—Ç –µ–≥–æ –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å.
 * @param {import('playwright').Page} page
 * @param {Function} log
 */
module.exports = async function checkSlickSlider(page, log) {
    try {
        log('üîé –ò—â–µ–º —Å–ª–∞–π–¥–µ—Ä');
        const slider = await page.$('.slick-slider');

        if (!slider) {
            log('‚ÑπÔ∏è –°–ª–∞–π–¥–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }

        log('‚úÖ –ù–∞–π–¥–µ–Ω .slick-slider, –Ω–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ª–∏—Å—Ç–∞–Ω–∏—è');

        let prevBtn = null, nextBtn = null, dots = [], slides = [];

        try {
            prevBtn = await slider.$('.slick-prev');
            nextBtn = await slider.$('.slick-next');
            // –ö–ª–∏–∫–∞–µ–º –ø–æ li, –∞ –Ω–µ –ø–æ button!
            dots = await slider.$$('.slick-dots li');
            slides = await slider.$$('.slick-slide');
        } catch (e) {
            log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∫–Ω–æ–ø–æ–∫/—Ç–æ—á–µ–∫/—Å–ª–∞–π–¥–æ–≤ —Å–ª–∞–π–¥–µ—Ä–∞: ' + e.message);
        }

        log(`‚ÑπÔ∏è –í—Å–µ–≥–æ —Å–ª–∞–π–¥–æ–≤: ${slides.length}`);

        if (nextBtn) {
            for (let i = 0; i < Math.min(3, slides.length - 1); i++) {
                try {
                    await nextBtn.click({ timeout: 2000 });
                    log(`‚û°Ô∏è –ö–ª–∏–∫–Ω—É–ª–∏ –ø–æ —Å—Ç—Ä–µ–ª–∫–µ next (${i + 1})`);
                } catch (e) {
                    log(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∫–ª–∏–∫–Ω—É—Ç—å –ø–æ .slick-next: ${e.message}`);
                }
                await page.waitForTimeout(900);
            }
            log('‚úÖ –°–ª–∞–π–¥–µ—Ä –ø—Ä–æ–ª–∏—Å—Ç–∞–ª–∏ –≤–ø–µ—Ä—ë–¥');
        } else if (dots.length > 1) {
            for (let i = 1; i < Math.min(4, dots.length); i++) {
                try {
                    await dots[i].scrollIntoViewIfNeeded();
                    await page.waitForTimeout(100);
                    await dots[i].click({ timeout: 2000, force: true });
                    log(`üîò –û–±—ã—á–Ω—ã–π –∫–ª–∏–∫ –ø–æ dots  #${i + 1}`);
                } catch (e) {
                    log(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∫–ª–∏–∫–Ω—É—Ç—å –ø–æ dots  #${i + 1}: ${e.message}`);
                }
                await page.waitForTimeout(800);
            }

            log('‚úÖ –°–ª–∞–π–¥–µ—Ä –ø—Ä–æ–ª–∏—Å—Ç–∞–ª–∏ –ø–æ —Ç–æ—á–∫–∞–º');
        } else {
            log('‚ö†Ô∏è –ù–µ—Ç –∫–Ω–æ–ø–æ–∫ .slick-next –∏ —Ç–æ—á–µ–∫ ‚Äî –Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–ª–∏—Å—Ç–∞—Ç—å, –≤–æ–∑–º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Å–ª–∞–π–¥');
        }
    } catch (err) {
        log('‚ö†Ô∏è –ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å–æ —Å–ª–∞–π–¥–µ—Ä–æ–º: ' + err.message);
    }
};
