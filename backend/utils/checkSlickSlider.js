// utils/checkSlickSlider.js

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ slick-—Å–ª–∞–π–¥–µ—Ä, –∏ –ª–∏—Å—Ç–∞–µ—Ç –µ–≥–æ –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å.
 * @param {import('playwright').Page} page
 * @param {Function} log
 */
module.exports = async function checkSlickSlider(page, log) {
    log('üîé –ò—â–µ–º —Å–ª–∞–π–¥–µ—Ä');
    const slider = await page.$('.slick-slider');

    if (!slider) {
        log('‚ÑπÔ∏è –°–ª–∞–π–¥–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }

    log('‚úÖ –ù–∞–π–¥–µ–Ω .slick-slider, –Ω–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ª–∏—Å—Ç–∞–Ω–∏—è');

    const prevBtn = await slider.$('.slick-prev');
    const nextBtn = await slider.$('.slick-next');
    const dots = await slider.$$('.slick-dots li button');

    const slides = await slider.$$('.slick-slide');
    log(`‚ÑπÔ∏è –í—Å–µ–≥–æ —Å–ª–∞–π–¥–æ–≤: ${slides.length}`);

    if (nextBtn) {
        for (let i = 0; i < Math.min(3, slides.length - 1); i++) {
            await nextBtn.click();
            log(`‚û°Ô∏è –ö–ª–∏–∫–Ω—É–ª–∏ –ø–æ —Å—Ç—Ä–µ–ª–∫–µ next (${i + 1})`);
            await page.waitForTimeout(900);
        }
        log('‚úÖ –°–ª–∞–π–¥–µ—Ä –ø—Ä–æ–ª–∏—Å—Ç–∞–ª–∏ –≤–ø–µ—Ä—ë–¥');
    } else if (dots.length > 1) {
        for (let i = 1; i < Math.min(4, dots.length); i++) {
            await dots[i].click();
            log(`üîò –ü–µ—Ä–µ–∫–ª—é—á–∏–ª–∏—Å—å –Ω–∞ —Å–ª–∞–π–¥ –ø–æ —Ç–æ—á–∫–µ ${i + 1}`);
            await page.waitForTimeout(900);
        }
        log('‚úÖ –°–ª–∞–π–¥–µ—Ä –ø—Ä–æ–ª–∏—Å—Ç–∞–ª–∏ –ø–æ —Ç–æ—á–∫–∞–º');
    } else {
        log('‚ö†Ô∏è –ù–µ—Ç –∫–Ω–æ–ø–æ–∫ .slick-next –∏ —Ç–æ—á–µ–∫ ‚Äî –Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–ª–∏—Å—Ç–∞—Ç—å, –≤–æ–∑–º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Å–ª–∞–π–¥');
    }
}
