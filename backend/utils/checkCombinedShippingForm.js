/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—É—é —Ñ–æ—Ä–º—É shipping (–ø–æ–ª—è –∏–∑ qualify –∏ shipping)
 * @param {import('playwright').Page} page
 * @param {Function} log
 * @param {string} countryCode
 * @param {string} partner
 */
module.exports = async function checkCombinedShippingForm(page, log, countryCode, partner) {
    const fieldsConfig = require('./fieldLabelsConfig.js');
    
    // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—É–ø–æ–Ω–∞
    const couponSelector = 'span.coupon';
    const couponExists = await page.$(couponSelector);

    if (couponExists) {
        const couponValue = await page.$eval(couponSelector, el => el.textContent.trim());
        log(`üßæ –ù–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –µ—Å—Ç—å –∫—É–ø–æ–Ω: "${couponValue}"`);

        if (['dnav3', 'newdna'].includes(partner)) {
            if (couponValue === 'DA25171525') {
                log('‚úÖ –ö—É–ø–æ–Ω –¥–ª—è dnav3/newdna –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π: DA25171525');
            } else {
                log(`‚ùå –ö—É–ø–æ–Ω –¥–ª—è dnav3/newdna –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å "DA25171525", –∞ —Å–µ–π—á–∞—Å "${couponValue}"`);
            }
        }
        if (['hg', 'ga'].includes(partner)) {
            if (couponValue === 'BS31910296') {
                log('‚úÖ –ö—É–ø–æ–Ω –¥–ª—è hg/ga –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π: BS31910296');
            } else {
                log(`‚ùå –ö—É–ø–æ–Ω –¥–ª—è hg/ga –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å "BS31910296", –∞ —Å–µ–π—á–∞—Å "${couponValue}"`);
            }
        }
    } else {
        log('‚ÑπÔ∏è –ö—É–ø–æ–Ω <span class="coupon">BS31910296</span> –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ (–ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É)');
    }
    
    // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–µ–π–±–ª–æ–≤ –∏ –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–æ–≤
    log(`üåé –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–µ–π–±–ª—ã –∏ –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–π —Ñ–æ—Ä–º—ã shipping (${countryCode})`);
    const config = fieldsConfig[countryCode];
    
    if (!config) {
        log(`‚ö†Ô∏è –ù–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è —Å—Ç—Ä–∞–Ω—ã "${countryCode}" ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É`);
        return;
    }
    
    // –û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª–µ–π –∏–∑ qualify –∏ shipping
    const allFields = [
        // –ü–æ–ª—è –∏–∑ qualify
        'firstName', 'lastName', 'email', 'phone',
        // –ü–æ–ª—è –∏–∑ shipping
        'address', 'zipCode', 'city', 'state', 'country'
    ];
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –ø–æ–ª—è
    for (const name of allFields) {
        if (!config[name]) continue;
        
        const { label, placeholder, type } = config[name];
        const isSelect = type === 'select';
        const inputSel = isSelect
            ? `form#shipping select[name="${name}"]`
            : `form#shipping input[name="${name}"]`;
            
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª—è
        const fieldExists = await page.$(inputSel) !== null;
        if (!fieldExists) {
            log(`‚ÑπÔ∏è –ü–æ–ª–µ "${name}" –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∞ —Ñ–æ—Ä–º–µ`);
            continue;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å –ø–æ–ª—è
        const isVisible = await page.$eval(inputSel, el => {
            const style = window.getComputedStyle(el);
            return style.display !== 'none' && style.visibility !== 'hidden' && el.offsetParent !== null;
        }).catch(() => false);

        if (!isVisible) {
            log(`‚ÑπÔ∏è –ü–æ–ª–µ "${name}" —Å–∫—Ä—ã—Ç–æ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É`);
            continue;
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–µ–π–±–ª–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
        try {
            const labelEl = await page.$(`${inputSel} >> xpath=../../label`);
            if (labelEl) {
                const actualLabel = await labelEl.evaluate(el => el.textContent.trim());
                if (actualLabel !== label) {
                    log(`‚ùå Label –¥–ª—è "${name}" –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç! –û–∂–∏–¥–∞–ª–∏: "${label}", –ø–æ–ª—É—á–∏–ª–∏: "${actualLabel}"`);
                } else {
                    log(`‚úÖ Label –¥–ª—è "${name}" —Å–æ–≤–ø–∞–¥–∞–µ—Ç: "${label}"`);
                }
            }
        } catch {
            // –ï—Å–ª–∏ –ª–µ–π–±–ª–∞ –Ω–µ—Ç, —ç—Ç–æ –Ω–µ –æ—à–∏–±–∫–∞
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ placeholder –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª–µ–π
        if (!isSelect) {
            try {
                const actualPlaceholder = await page.$eval(inputSel, el => el.getAttribute('placeholder'));
                if (actualPlaceholder !== placeholder) {
                    log(`‚ùå Placeholder –¥–ª—è "${name}" –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç! –û–∂–∏–¥–∞–ª–∏: "${placeholder}", –ø–æ–ª—É—á–∏–ª–∏: "${actualPlaceholder}"`);
                } else {
                    log(`‚úÖ Placeholder –¥–ª—è "${name}" —Å–æ–≤–ø–∞–¥–∞–µ—Ç: "${placeholder}"`);
                }
            } catch {
                log(`‚ÑπÔ∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å placeholder –¥–ª—è "${name}"`);
            }
            
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ –ø–æ–ª—è
            try {
                const actualType = await page.$eval(inputSel, el => el.getAttribute('type'));
                if (actualType !== type) {
                    log(`‚ùå Type –¥–ª—è "${name}" –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç! –û–∂–∏–¥–∞–ª–∏: "${type}", –ø–æ–ª—É—á–∏–ª–∏: "${actualType}"`);
                } else {
                    log(`‚úÖ Type –¥–ª—è "${name}" —Å–æ–≤–ø–∞–¥–∞–µ—Ç: "${type}"`);
                }
            } catch {
                log(`‚ÑπÔ∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å type –¥–ª—è "${name}"`);
            }
        }
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–≤–æ–≥–æ option –¥–ª—è select
        if (isSelect && placeholder) {
            try {
                const optionText = await page.$eval(`${inputSel} option`, el => el.textContent.trim());
                if (optionText !== placeholder) {
                    log(`‚ùå [select ${name}] –ü–µ—Ä–≤—ã–π option (placeholder) ‚Äî –æ–∂–∏–¥–∞–ª–∏ "${placeholder}", –ø–æ–ª—É—á–∏–ª–∏ "${optionText}"`);
                } else {
                    log(`‚úÖ [select ${name}] –ü–µ—Ä–≤—ã–π option —Å–æ–≤–ø–∞–¥–∞–µ—Ç: "${optionText}"`);
                }
            } catch {
                log(`‚ÑπÔ∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä–≤—ã–π option –¥–ª—è "${name}"`);
            }
        }
    }

    // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ required, –ø—É—Å—Ç–∞—è —Ñ–æ—Ä–º–∞
    log('üö´ –ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—É—Å—Ç—É—é —Ñ–æ—Ä–º—É...');
    // –û—á–∏—â–∞–µ–º –≤—Å–µ –ø–æ–ª—è
    for (const name of allFields) {
        const inputSel = `form#shipping input[name="${name}"]`;
        const inputExists = await page.$(inputSel) !== null;
        if (inputExists) {
            await page.fill(inputSel, '');
        }
    }
    
    await page.click('form#shipping button[type="submit"]');
    await page.waitForTimeout(800);

    let stillHere = await page.isVisible('form#shipping');
    if (stillHere) {
        log('‚úÖ –§–æ—Ä–º–∞ –æ—Å—Ç–∞–ª–∞—Å—å ‚Äî –≤–∞–ª–∏–¥–∞—Ü–∏—è –ø—É—Å—Ç–æ–π —Ñ–æ—Ä–º—ã —Ä–∞–±–æ—Ç–∞–µ—Ç');
    } else {
        log('‚ùå –§–æ—Ä–º–∞ –∏—Å—á–µ–∑–ª–∞ ‚Äî –±–∞–≥ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø—É—Å—Ç–æ–π —Ñ–æ—Ä–º—ã');
        return; // –ü—Ä–µ—Ä—ã–≤–∞–µ–º —Ç–µ—Å—Ç, –µ—Å–ª–∏ —Ñ–æ—Ä–º–∞ –∏—Å—á–µ–∑–ª–∞
    }

    // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ email
    const invalidEmails = ['test@', 'bad.email', '@domain.com', '.user@gmail.com', 'user.@gmail.com', 'us..er@gmail.com'];
    for (const bad of invalidEmails) {
        await page.fill('input[name="firstName"]', 'Test');
        await page.fill('input[name="lastName"]', 'Test');
        await page.fill('input[name="email"]', bad);
        await page.fill('input[name="phone"]', '123456');
        log(`üö´ –ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–º email: "${bad}"`);
        await page.click('form#shipping button[type="submit"]');
        await page.waitForTimeout(700);
        stillHere = await page.isVisible('form#shipping');
        if (stillHere) {
            log('‚úÖ –§–æ—Ä–º–∞ –æ—Å—Ç–∞–ª–∞—Å—å ‚Äî –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π email –Ω–µ –ø—Ä–æ–ø—É—â–µ–Ω');
        } else {
            log(`‚ùå –§–æ—Ä–º–∞ —É—à–ª–∞ ‚Äî –±–∞–≥ –≤ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ email: "${bad}"`);
            return;
        }
        await page.fill('input[name="email"]', '');
    }

    // 5. –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É –≤–∞–ª–∏–¥–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    log('üìù –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É –≤–∞–ª–∏–¥–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏...');
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º –ø–æ–ª—è –∏–∑ qualify
    await page.fill('input[name="firstName"]', 'Ivan');
    await page.fill('input[name="lastName"]', 'Ivanov');
    await page.fill('input[name="email"]', 'user1_2-3@subdomain.test.com');
    await page.fill('input[name="phone"]', '8888888888');
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º –∞–¥—Ä–µ—Å–Ω—ã–µ –ø–æ–ª—è
    const addressField = await page.$('input[name="address"]');
    if (addressField) await page.fill('input[name="address"]', 'Test Street 123');
    
    const zipField = await page.$('input[name="zipCode"]');
    if (zipField) await page.fill('input[name="zipCode"]', '12345');
    
    const cityField = await page.$('input[name="city"]');
    if (cityField) await page.fill('input[name="city"]', 'Test City');
    
    // –í—ã–±–∏—Ä–∞–µ–º —à—Ç–∞—Ç/—Ä–µ–≥–∏–æ–Ω, –µ—Å–ª–∏ –µ—Å—Ç—å
    const stateSelect = await page.$('form#shipping select[name="state"]');
    if (stateSelect) {
        const customDropdownSelect = await page.$('form#shipping .dropdown .dropdown-select');
        if (customDropdownSelect) {
            log('‚ö°Ô∏è [state] –ö–∞—Å—Ç–æ–º–Ω—ã–π select (dropdown), –≤—ã–±–∏—Ä–∞–µ–º —à—Ç–∞—Ç —á–µ—Ä–µ–∑ .dropdown-menu-item');
            await customDropdownSelect.click();
            await page.waitForSelector('form#shipping .dropdown-menu', { timeout: 2500 });
            await page.waitForTimeout(200);
            const toPick = await page.$('form#shipping .dropdown-menu-item:not(.is-select)[data-value]');
            if (toPick) {
                const text = await toPick.evaluate(el => el.textContent.trim());
                await toPick.click();
                log(`‚úÖ [state] –ö–ª–∏–∫–Ω—É–ª–∏ –ø–æ –∫–∞—Å—Ç–æ–º–Ω–æ–º—É —à—Ç–∞—Ç—É: ${text}`);
            } else {
                log('‚ùå [state] –ù–µ –Ω–∞—à–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–π —à—Ç–∞—Ç –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤ –∫–∞—Å—Ç–æ–º–Ω–æ–º dropdown!');
            }
        } else {
            // –û–±—ã—á–Ω—ã–π select
            log('üü¢ [state] –û–±—ã—á–Ω—ã–π select, –≤—ã–±–∏—Ä–∞–µ–º —à—Ç–∞—Ç —á–µ—Ä–µ–∑ .selectOption');
            const stateOptions = await page.$$eval('form#shipping select[name="state"] option', opts => opts.map(o => o.value).filter(Boolean));
            if (stateOptions.length >= 1) {
                await page.selectOption('form#shipping select[name="state"]', stateOptions[0]);
                await page.$eval('form#shipping select[name="state"]', el => {
                    el.dispatchEvent(new Event('change', { bubbles: true }));
                });
                log(`‚úÖ [state] –í—ã–±—Ä–∞–ª–∏ —à—Ç–∞—Ç "${stateOptions[0]}" –≤ –æ–±—ã—á–Ω–æ–º select`);
            } else {
                log('‚ùå [state] –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–ø—Ü–∏–π –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤ –æ–±—ã—á–Ω–æ–º select!');
            }
        }
    }
    
    log('üü¢ –¢–µ—Å—Ç –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–π —Ñ–æ—Ä–º—ã shipping –∑–∞–≤–µ—Ä—à—ë–Ω');
};