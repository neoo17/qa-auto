module.exports = async function clickSendButtonAndCheckQualify(page, log) {
    log('üîé –ò—â–µ–º –∫–Ω–æ–ø–∫—É .btn__send...');
    const btn = await page.$('.btn__send');
    if (!btn) {
        log('‚ùå –ö–Ω–æ–ø–∫–∞ .btn__send –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        return;
    }
    log('‚úÖ –ö–Ω–æ–ø–∫–∞ –Ω–∞–π–¥–µ–Ω–∞, –∫–ª–∏–∫–∞–µ–º...');

    const oldUrl = page.url();

    await btn.click();


    let success = false;
    for (let i = 0; i < 20; i++) { // ~4 —Å–µ–∫—É–Ω–¥—ã (200–º—Å * 20)
        await page.waitForTimeout(200);
        const url = page.url();
        if (url !== oldUrl && url.includes('qualify.html')) {
            log('‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ');
            log(`‚úÖ –ü—Ä–æ–∏–∑–æ—à—ë–ª –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ qualify`);
            success = true;
            break;
        }
    }

    if (!success) {
        const url = page.url();
        log(`‚ùå –ü–æ—Å–ª–µ –∫–ª–∏–∫–∞ –Ω–µ –±—ã–ª–æ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ qualify.html. –¢–µ–∫—É—â–∏–π url: ${url}`);
    }
};
